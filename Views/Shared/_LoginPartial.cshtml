@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello
                @User.Identity?.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-danger btn-lg rounded-pill shadow-sm">
                    Logout
                </button>
            </form>

        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link btn btn-outline-primary btn-lg rounded-pill shadow-sm" asp-area="Identity"
                asp-page="/Account/Login">
                Login
            </a>
        </li>
    }
    @if (User.IsInRole("Admin"))
    {
        <li class="nav-item">
            <a class="nav-link btn btn-primary btn-lg rounded-pill shadow-sm" asp-controller="Admin"
                asp-action="CreateUser">
                Add New User
            </a>
        </li>
    }
</ul>
